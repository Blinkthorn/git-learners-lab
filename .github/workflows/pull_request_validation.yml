name: Pull Request Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  validate-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}  # Changed from head_ref

      - name: Debug branch info
        run: |
          echo "Base ref: ${{ github.base_ref }}"
          echo "Head ref: ${{ github.head_ref }}"
          git branch -a
          git ls-remote --heads origin

      - name: Verify branches exist
        run: |
          if ! git ls-remote --exit-code origin refs/heads/${{ github.base_ref }}; then
            echo "::error::Base branch '${{ github.base_ref }}' does not exist."
            exit 1
          fi
          if ! git ls-remote --exit-code origin refs/heads/${{ github.head_ref }}; then
            echo "::error::Head branch '${{ github.head_ref }}' does not exist."
            exit 1
          fi

      - name: Prepare README files
        run: |
          mkdir -p base head
          git fetch origin ${{ github.base_ref }} --depth=1
          git show origin/${{ github.base_ref }}:README.md > base/README.md || exit 1
          cp README.md head/README.md

      - name: Check modified files
        run: |
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"
          if [ "$(echo "$CHANGED_FILES" | wc -l)" -ne 1 ] || [ "$CHANGED_FILES" != "README.md" ]; then
            echo "::error::Only README.md should be modified. Found changes in: $CHANGED_FILES"
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install lxml requests beautifulsoup4 markdown

      - name: Run validation
        run: python .github/workflows/validate_pr.py
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
          GITHUB_REPOSITORY: ${{ github.repository }}

  auto-merge:
    needs: validate-pull-request
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Enable auto-merge
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: squash